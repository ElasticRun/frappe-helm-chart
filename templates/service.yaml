---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "er-frappe.fullname" . }}
  namespace: {{ .Values.targetNamespace }}
  labels:
{{ include "er-frappe.labels" . | indent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ .Values.service.port }}
      targetPort: nginx
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: {{ include "er-frappe.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
---
# Mariadb service used internally by Frappe to connect to an external mariadb
kind: Service
apiVersion: v1
metadata:
 name: {{ .Release.Name }}-db-ntex-com
 namespace: {{ .Values.targetNamespace }}
spec:
  type: ExternalName
  externalName: {{ .Values.branch }}-db.ntex.com
  ports:
  - port: 3306
    targetPort: {{ .Values.db.port | default 3306 }}
---
apiVersion: v1
kind: Service
metadata:
  name: er-frappe-redis-cache
  namespace: {{ .Values.targetNamespace }}
  labels:
{{ include "er-frappe.labels" . | indent 4 }}
spec:
  type: ExternalName
  externalName: {{ if .Values.redisserver.enabled }}{{ .Release.Name | replace " " "-" }}-cache-ntex-com{{ else }}{{ tpl .Values.redis.cache.targetHost . }}{{ end }}
  ports:
    - port: 13000
      targetPort: {{ if .Values.redisserver.enabled }}{{ .Values.redisserver.cache.service.port | default 13000 }}{{ else }}{{ .Values.redis.cache.targetPort }}{{ end }}
      protocol: TCP
      name: redis-cache
---
apiVersion: v1
kind: Service
metadata:
  name: er-frappe-redis-socketio
  namespace: {{ .Values.targetNamespace }}
  labels:
{{ include "er-frappe.labels" . | indent 4 }}
spec:
  type: ExternalName
  externalName: {{ if .Values.redisserver.enabled }}{{ .Release.Name | replace " " "-" }}-socketio-ntex-com{{ else }}{{ tpl .Values.redis.socketio.targetHost . }}{{ end }}
  ports:
    - port: 12000
      targetPort: {{ if .Values.redisserver.enabled }}{{ .Values.redisserver.socketio.service.port | default 12000 }}{{ else }}{{ .Values.redis.socketio.targetPort }}{{ end }}
      protocol: TCP
      name: redis-socketio
---
apiVersion: v1
kind: Service
metadata:
  name: er-frappe-redis-queue
  namespace: {{ .Values.targetNamespace }}
  labels:
{{ include "er-frappe.labels" . | indent 4 }}
spec:
  type: ExternalName
  externalName: {{ if .Values.redisserver.enabled }}{{ .Release.Name | replace " " "-" }}-queue-ntex-com{{ else }}{{ tpl .Values.redis.queue.targetHost . }}{{ end }}
  ports:
    - port: 11000
      targetPort: {{ if .Values.redisserver.enabled }}{{ .Values.redisserver.queue.service.port | default 11000 }}{{ else }}{{ .Values.redis.queue.targetPort }}{{ end }}
      protocol: TCP
      name: redis-queue
{{ if .Values.redisserver.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name | replace " " "-" }}-cache-ntex-com
  {{- if .Values.targetNamespace }}
  namespace: {{ .Values.targetNamespace }}
  {{- end }}
spec:
  selector:
    app: {{ .Release.Name | replace " " "-" }}-redis-cache
  ports:
  - protocol: TCP
    port: {{ .Values.redisserver.cache.service.port | default 13000 }}
    targetPort: {{ .Values.redisserver.cache.listenport }}
  type: {{ .Values.redisserver.cache.service.type }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name | replace " " "-" }}-queue-ntex-com
  {{- if .Values.targetNamespace }}
  namespace: {{ .Values.targetNamespace }}
  {{- end }}
spec:
  selector:
    app: {{ .Release.Name | replace " " "-" }}-redis-queue
  ports:
  - protocol: TCP
    port: {{ .Values.redisserver.queue.service.port | default 11000 }}
    targetPort: {{ .Values.redisserver.queue.listenport }}
  type: {{ .Values.redisserver.cache.service.type }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name | replace " " "-" }}-socketio-ntex-com
  {{- if .Values.targetNamespace }}
  namespace: {{ .Values.targetNamespace }}
  {{- end }}
spec:
  selector:
    app: {{ .Release.Name | replace " " "-" }}-redis-socketio
  ports:
  - protocol: TCP
    port: {{ .Values.redisserver.socketio.service.port | default 12000 }}
    targetPort: {{ .Values.redisserver.socketio.listenport }}
  type: {{ .Values.redisserver.socketio.service.type }}
{{ end }}
