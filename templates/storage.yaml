---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-sites-pvc
  namespace: {{ .Values.targetNamespace }}
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: {{ if eq .Values.persistence.type "azure" }}{{ .Release.Name }}-sites-sc{{ else if eq .Values.persistence.type "local" }}{{ .Release.Name }}-sites-sc{{ else }}default{{ end }}
  resources:
    requests:
      storage: {{ .Values.persistence.capacityInGi }}Gi
{{ if eq .Values.persistence.type "azure" }}
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: {{ .Release.Name }}-sites-sc
  namespace: {{ .Values.targetNamespace }}
# Values below are specific to azure - will need to be updated for migrating to any other cloud platform.
provisioner: kubernetes.io/azure-{{ .Values.persistence.subtype }}
parameters:
  skuName: Standard_LRS
  location: {{ .Values.persistence.location }}
  storageAccount: {{ .Values.persistence.storageaccount }}
reclaimPolicy: Retain
mountOptions:
  - dir_mode=0777
  - file_mode=0777
  - mfsymlinks
allowVolumeExpansion: true
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-aks-share-secret
  namespace: {{ .Values.targetNamespace }}
type: Opaque
data:
  azurestorageaccountname: {{ .Values.persistence.storageaccount | b64enc }}
  azurestorageaccountkey: {{ .Values.persistence.storageaccountkey }}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ .Release.Name }}-sites-pv
  namespace: {{ .Values.targetNamespace }}
spec:
  capacity:
    storage: {{ .Values.persistence.capacityInGi }}Gi
  accessModes:
    - ReadWriteMany
  storageClassName: {{ .Release.Name }}-sites-sc
  azureFile:
    secretName: {{ .Release.Name }}-aks-share-secret
    secretNamespace: {{ .Values.targetNamespace }}
    shareName: {{ .Values.persistence.sharename }}
    readOnly: false
  mountOptions:
    - dir_mode=0777
    - file_mode=0777
    - mfsymlinks
{{ else if eq .Values.persistence.type "local" }}
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: {{ .Release.Name }}-sites-sc
# labels:
#     addonmanager.kubernetes.io/mode: EnsureExists
reclaimPolicy: Retain
allowVolumeExpansion: true
# mountOptions:
#   - dir_mode=0777
#   - file_mode=0777
#   - uid=frappe
#   - gid=frappe
# Values below are specific to provider
provisioner: microk8s.io/hostpath
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ .Release.Name }}-sites-pv
spec:
  capacity:
    storage: {{ .Values.persistence.capacityInGi }}Gi
  accessModes:
    - ReadWriteMany
  storageClassName: {{ .Release.Name }}-sites-sc
  hostPath:
    path: /data/frappe/Software/k8s-volumes/frappe-vol/
  # mountOptions:
  #   - dir_mode=0777
  #   - file_mode=0777
  #   - uid=frappe
  #   - gid=frappe
{{ end }}
